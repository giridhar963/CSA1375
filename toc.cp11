#include <stdio.h>
#include <stdbool.h>
#define MAX_STATES 10

// Function to find the ε-closure for a state in the NFA
void epsilonClosure(int nfa[MAX_STATES][MAX_STATES], int numStates, int state, bool visited[]) {
    visited[state] = true; // Mark the state as visited
    
    // Iterate through all the states
    for (int i = 0; i < numStates; i++) {
        // If there is an ε-move from the current state to another state and that state is unvisited, call the function recursively
        if (nfa[state][i] == 1 && visited[i] == false) {
            epsilonClosure(nfa, numStates, i, visited);
        }
    }
}

int main() {
    int nfa[MAX_STATES][MAX_STATES];
    int numStates;

    printf("Enter the number of states in the NFA: ");
    scanf("%d", &numStates);

    printf("Enter the transition table for the NFA (0 for no transition, 1 for transition):\n");
    for (int i = 0; i < numStates; i++) {
        for (int j = 0; j < numStates; j++) {
            scanf("%d", &nfa[i][j]);
        }
    }

    printf("ε-closure for all states in the NFA:\n");
    for (int i = 0; i < numStates; i++) {
        bool visited[MAX_STATES] = { false }; // Initialize visited array for each state

        printf("ε-closure(q%d): ", i);
        epsilonClosure(nfa, numStates, i, visited);

        // Print the states in the ε-closure
        for (int j = 0; j < numStates; j++) {
            if (visited[j]) {
                printf("q%d ", j);
            }
        }
        printf("\n");
    }

    return 0;
}
